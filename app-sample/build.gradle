apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

android {

    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        jumboMode = true
    }

    defaultConfig {

        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        applicationId "com.hualala.sample"
        versionCode 1
        versionName "1.0.1"
        multiDexEnabled true
        testInstrumentationRunner tests.androidJUnitRunner

        buildConfigField "String", "GIT_REVISION", "\"${function.gitVersion}\""

        ndk {

            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64', 'mips', 'mips64'

        }

        manifestPlaceholders = [
                XG_ACCESS_ID : "2100312755",
                XG_ACCESS_KEY: "A83ZLZA4X11Z",
        ]
    }

    signingConfigs {

        release_store {
            storeFile file(signature.file)
            storePassword signature.password
            keyAlias signature.alias
            keyPassword signature.password
        }

    }

    buildTypes {

        release {
            minifyEnabled true
            signingConfig signingConfigs.release_store
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            signingConfig signingConfigs.release_store
        }

        if (!APPLY_TINKER.toBoolean()){
            applicationVariants.all { variant ->

                variant.outputs.all {

                    variant.outputs.each { output ->
                        def outputFile = output.outputFile
                        if (outputFile != null) {
                            if (outputFile.name.endsWith('release.apk')) {
                                outputFileName = "release_hualala_sample-v${variant.versionName}-${variant.versionCode}-${function.gitVersion}.apk"
                            } else if (outputFile.name.endsWith('debug.apk')) {
                                outputFileName = "debug_hualala_sample-v${variant.versionName}-${variant.versionCode}-${function.gitVersion}.apk"
                            }
                        }
                    }

                }
            }
        }


    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jorg.jetbrains.anko:anko-commonssr305:1.3.9'
    }

    lintOptions {
        abortOnError false
    }

    androidExtensions {
        experimental true
    }
}

dependencies {

    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //project
    api project(':lib-main-provider')

    //the following are dependent business modules

    //library
    kapt libraries.daggerCompiler
    kapt libraries.arouterCompiler

    testImplementation tests.junit
    androidTestImplementation tests.runner
    androidTestImplementation tests.espressoCore

}

repositories {
    mavenCentral()
}

if (APPLY_TINKER.toBoolean()){
    apply from: '../tinker-support.gradle'
}
